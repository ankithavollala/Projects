import java.util.Scanner;
public class TicTacToe{ 
    public static char[][] board = new char[3][3];
    public static char current_Player;
    public static void main(String[] args) {
        Scanner sc= new Scanner(System.in);
        while (true) {
            initializingBoard();
            current_Player = 'X';
            boolean game_Ended = false;

            while (!game_Ended) {
                printBoard();
                players_Move(sc);
                if (checkWinner()) {
                    printBoard();
                    System.out.println("Player " + current_Player + " wins!");
                    game_Ended = true;
                } else if (isBoardFull()) {
                    printBoard();
                    System.out.println("The game is a draw!");
                    game_Ended = true;
                } else {
                    current_Player = (current_Player == 'X') ? 'O' : 'X';
                }
            }

            System.out.print("Do you want to play again? (yes/no): ");
            if (!sc.next().equalsIgnoreCase("yes")) {
                break;
            }
        }

        sc.close();
    }

    public static void initializingBoard() {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                board[i][j] = '-';
            }
        }
    }

    public static void printBoard() {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                System.out.print(board[i][j] + " ");
            }
            System.out.println();
        }
    }

    public static void players_Move(Scanner sc) {
        int row, col;
        while (true) {
            System.out.println("Player " + current_Player + ", enter your move (row [1-3] and column [1-3]): ");
            row = sc.nextInt() - 1;
            col = sc.nextInt() - 1;
            if (row >= 0 && col >= 0 && row < 3 && col < 3 && board[row][col] == '-') {
                board[row][col] = current_Player;
                break;
            } else {
                System.out.println("This move is not valid");
            }
        }
    }

    public static boolean checkWinner() {
        for (int i = 0; i < 3; i++) {
            if (board[i][0] == current_Player && board[i][1] == current_Player && board[i][2] == current_Player) {
                return true;
            }
            if (board[0][i] == current_Player && board[1][i] == current_Player && board[2][i] == current_Player) {
                return true;
            }
        }
        if (board[0][0] == current_Player && board[1][1] == current_Player && board[2][2] == current_Player) {
            return true;
        }
        if (board[0][2] == current_Player && board[1][1] == current_Player && board[2][0] == current_Player) {
            return true;
        }
        return false;
    }

    public static boolean isBoardFull() {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                if (board[i][j] == '-') {
                    return false;
                }
            }
        }
        return true;
    }
}
